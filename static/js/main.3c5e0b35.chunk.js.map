{"version":3,"sources":["Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c5e0b35.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : `/noPosterSmall.png`\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n\n    console.log(this.state);\n\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Homflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Hoflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : `/noPosterSmall.png`\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}